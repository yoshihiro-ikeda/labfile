<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<sm:blocks xmlns:sm="http://example.com/SimulinkModel" name="pid_controller1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://example.com/SimulinkModel SimulinkModel.xsd">
  <file name="models/pid/pid_controller1_ert_rtw/pid_controller1.h" size="5528" timestamp="2013-11-29T15:51:06+0900" type="c-header"/>
  <file name="models/pid/xx.xml" size="9163" timestamp="2013-12-02T17:34:36+0900" type="xml"/>
  <file name="models/pid/pid_controller1_ert_rtw/pid_controller1.c" size="5624" timestamp="2013-11-29T15:51:06+0900" type="c-source"/>
  <file name="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" size="2390" timestamp="2013-11-29T15:51:06+0900" type="c-data"/>
  <block blocktype="Inport" id="1" name="pid_controller1_error">
    <output line="pid_controller1_error_1" port="pid_controller1_error_1">
      <connect block="pid_controller1_pid" port="pid_controller1_pid_error"/>
    </output>
    <var line="pid_controller1_error_1" mode="extin" name="pid_controller1_error_1" port="pid_controller1_error_1" type="real32_T"/>
    <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="145" type="init">  pid_controller1_error_1 = 0.0F;

</code>
    <forward block="pid_controller1_pid_Gain" type="data">
      <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_Gain_1" type="real32_T"/>
    </forward>
    <forward block="pid_controller1_pid_Sum" type="data">
      <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_Sum_1" type="real32_T"/>
    </forward>
    <forward block="pid_controller1_pid_Sum1" type="data">
      <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_Sum1_1" type="real32_T"/>
    </forward>
    <forward block="pid_controller1_pid_UnitDelay1" type="data">
      <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_UnitDelay1_1" type="real32_T"/>
    </forward>
  </block>
  <block blocktype="SubSystem" id="2" name="pid_controller1_pid">
    <input line="pid_controller1_error_1" port="pid_controller1_pid_error">
      <connect block="pid_controller1_error" port="pid_controller1_error_1"/>
    </input>
    <output line="pid_controller1_pid_1" port="pid_controller1_pid_voltage">
      <connect block="pid_controller1_voltage" port="pid_controller1_voltage_1"/>
    </output>
    <sm:blocks name="pid">
      <block blocktype="Inport" id="3" name="pid_controller1_pid_error">
        <output line="pid_controller1_pid_error_1" port="pid_controller1_pid_error_1">
          <connect block="pid_controller1_pid_Gain" port="pid_controller1_pid_Gain_1"/>
          <connect block="pid_controller1_pid_Sum" port="pid_controller1_pid_Sum_1"/>
          <connect block="pid_controller1_pid_Sum1" port="pid_controller1_pid_Sum1_1"/>
          <connect block="pid_controller1_pid_UnitDelay1" port="pid_controller1_pid_UnitDelay1_1"/>
        </output>
      </block>
      <block blocktype="Constant" id="4" name="pid_controller1_pid_Constant">
        <output line="pid_controller1_pid_Constant_1" port="pid_controller1_pid_Constant_1">
          <connect block="pid_controller1_pid_Product" port="pid_controller1_pid_Product_2"/>
        </output>
        <var line="pid_controller1_pid_Constant_1" mode="output" name="pid_controller1_pid_Constant_1" port="pid_controller1_pid_Constant_1" type="real32_T"/>
        <param name="Constant_Value" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="46" type="task">  /* Constant: '&lt;S1&gt;/Constant' */
  pid_controller1_pid_Constant_1 = pid_controller1_P.Constant_Value;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="127" type="init">  pid_controller1_pid_Constant_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="22" type="param">  100.0F,                              /* Expression: Fs
                                        * Referenced by: '&lt;S1&gt;/Constant'
                                        */
</code>
        <forward block="pid_controller1_pid_Product" type="data">
          <var line="pid_controller1_pid_Constant_1" mode="input" name="pid_controller1_pid_Constant_1" port="pid_controller1_pid_Product_2" type="real32_T"/>
        </forward>
      </block>
      <block blocktype="Gain" id="5" name="pid_controller1_pid_Gain">
        <input line="pid_controller1_pid_error_1" port="pid_controller1_pid_Gain_1">
          <connect block="pid_controller1_pid_error" port="pid_controller1_pid_error_1"/>
        </input>
        <output line="pid_controller1_pid_Gain_1" port="pid_controller1_pid_Gain_1">
          <connect block="pid_controller1_pid_Sum2" port="pid_controller1_pid_Sum2_1"/>
        </output>
        <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_Gain_1" type="real32_T"/>
        <var line="pid_controller1_pid_Gain_1" mode="output" name="pid_controller1_pid_Gain_1" port="pid_controller1_pid_Gain_1" type="real32_T"/>
        <param name="Gain_Gain" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="49" type="task">  /* Gain: '&lt;S1&gt;/Gain' incorporates:
   *  Inport: '&lt;Root&gt;/error'
   */
  pid_controller1_pid_Gain_1 = pid_controller1_P.Gain_Gain *
    pid_controller1_error_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="128" type="init">  pid_controller1_pid_Gain_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="25" type="param">  1.53F,                               /* Expression: Kp
                                        * Referenced by: '&lt;S1&gt;/Gain'
                                        */
</code>
        <forward block="pid_controller1_pid_Sum2" type="data">
          <var line="pid_controller1_pid_Gain_1" mode="input" name="pid_controller1_pid_Gain_1" port="pid_controller1_pid_Sum2_1" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_error" type="data">
          <var line="pid_controller1_error_1" mode="extin" name="pid_controller1_error_1" port="pid_controller1_error_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Gain" id="6" name="pid_controller1_pid_Gain1">
        <input line="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_Gain1_1">
          <connect block="pid_controller1_pid_UnitDelay" port="pid_controller1_pid_UnitDelay_1"/>
        </input>
        <output line="pid_controller1_pid_Gain1_1" port="pid_controller1_pid_Gain1_1">
          <connect block="pid_controller1_pid_Product" port="pid_controller1_pid_Product_1"/>
        </output>
        <var line="pid_controller1_pid_UnitDelay_1" mode="input" name="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_Gain1_1" type="real32_T"/>
        <var line="pid_controller1_pid_Gain1_1" mode="output" name="pid_controller1_pid_Gain1_1" port="pid_controller1_pid_Gain1_1" type="real32_T"/>
        <param name="Gain1_Gain" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="58" type="task">  /* Gain: '&lt;S1&gt;/Gain1' */
  pid_controller1_pid_Gain1_1 = pid_controller1_P.Gain1_Gain *
    pid_controller1_pid_UnitDelay_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="130" type="init">  pid_controller1_pid_Gain1_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="31" type="param">  0.387F,                              /* Expression: Ki
                                        * Referenced by: '&lt;S1&gt;/Gain1'
                                        */
</code>
        <forward block="pid_controller1_pid_Product" type="data">
          <var line="pid_controller1_pid_Gain1_1" mode="input" name="pid_controller1_pid_Gain1_1" port="pid_controller1_pid_Product_1" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_pid_UnitDelay" type="data">
          <var line="pid_controller1_pid_UnitDelay_1" mode="output" name="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_UnitDelay_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Gain" id="7" name="pid_controller1_pid_Gain2">
        <input line="pid_controller1_pid_Sum1_1" port="pid_controller1_pid_Gain2_1">
          <connect block="pid_controller1_pid_Sum1" port="pid_controller1_pid_Sum1_1"/>
        </input>
        <output line="pid_controller1_pid_Gain2_1" port="pid_controller1_pid_Gain2_1">
          <connect block="pid_controller1_pid_Gain3" port="pid_controller1_pid_Gain3_1"/>
        </output>
        <var line="pid_controller1_pid_Sum1_1" mode="input" name="pid_controller1_pid_Sum1_1" port="pid_controller1_pid_Gain2_1" type="real32_T"/>
        <var line="pid_controller1_pid_Gain2_1" mode="output" name="pid_controller1_pid_Gain2_1" port="pid_controller1_pid_Gain2_1" type="real32_T"/>
        <param name="Gain2_Gain" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="71" type="task">  /* Gain: '&lt;S1&gt;/Gain2' */
  pid_controller1_pid_Gain2_1 = pid_controller1_P.Gain2_Gain *
    pid_controller1_pid_Sum1_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="133" type="init">  pid_controller1_pid_Gain2_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="37" type="param">  0.0081F,                             /* Expression: Kd
                                        * Referenced by: '&lt;S1&gt;/Gain2'
                                        */
</code>
        <forward block="pid_controller1_pid_Gain3" type="data">
          <var line="pid_controller1_pid_Gain2_1" mode="input" name="pid_controller1_pid_Gain2_1" port="pid_controller1_pid_Gain3_1" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_pid_Sum1" type="data">
          <var line="pid_controller1_pid_Sum1_1" mode="output" name="pid_controller1_pid_Sum1_1" port="pid_controller1_pid_Sum1_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Gain" id="8" name="pid_controller1_pid_Gain3">
        <input line="pid_controller1_pid_Gain2_1" port="pid_controller1_pid_Gain3_1">
          <connect block="pid_controller1_pid_Gain2" port="pid_controller1_pid_Gain2_1"/>
        </input>
        <output line="pid_controller1_pid_Gain3_1" port="pid_controller1_pid_Gain3_1">
          <connect block="pid_controller1_pid_Sum2" port="pid_controller1_pid_Sum2_3"/>
        </output>
        <var line="pid_controller1_pid_Gain2_1" mode="input" name="pid_controller1_pid_Gain2_1" port="pid_controller1_pid_Gain3_1" type="real32_T"/>
        <var line="pid_controller1_pid_Gain3_1" mode="output" name="pid_controller1_pid_Gain3_1" port="pid_controller1_pid_Gain3_1" type="real32_T"/>
        <param name="Gain3_Gain" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="75" type="task">  /* Gain: '&lt;S1&gt;/Gain3' */
  pid_controller1_pid_Gain3_1 = pid_controller1_P.Gain3_Gain *
    pid_controller1_pid_Gain2_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="134" type="init">  pid_controller1_pid_Gain3_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="40" type="param">  100.0F,                              /* Expression: Fs
                                        * Referenced by: '&lt;S1&gt;/Gain3'
                                        */
</code>
        <forward block="pid_controller1_pid_Sum2" type="data">
          <var line="pid_controller1_pid_Gain3_1" mode="input" name="pid_controller1_pid_Gain3_1" port="pid_controller1_pid_Sum2_3" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_pid_Gain2" type="data">
          <var line="pid_controller1_pid_Gain2_1" mode="output" name="pid_controller1_pid_Gain2_1" port="pid_controller1_pid_Gain2_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Product" id="9" name="pid_controller1_pid_Product">
        <input line="pid_controller1_pid_Gain1_1" port="pid_controller1_pid_Product_1">
          <connect block="pid_controller1_pid_Gain1" port="pid_controller1_pid_Gain1_1"/>
        </input>
        <input line="pid_controller1_pid_Constant_1" port="pid_controller1_pid_Product_2">
          <connect block="pid_controller1_pid_Constant" port="pid_controller1_pid_Constant_1"/>
        </input>
        <output line="pid_controller1_pid_Product_1" port="pid_controller1_pid_Product_1">
          <connect block="pid_controller1_pid_Sum2" port="pid_controller1_pid_Sum2_2"/>
        </output>
        <var line="pid_controller1_pid_Gain1_1" mode="input" name="pid_controller1_pid_Gain1_1" port="pid_controller1_pid_Product_1" type="real32_T"/>
        <var line="pid_controller1_pid_Constant_1" mode="input" name="pid_controller1_pid_Constant_1" port="pid_controller1_pid_Product_2" type="real32_T"/>
        <var line="pid_controller1_pid_Product_1" mode="output" name="pid_controller1_pid_Product_1" port="pid_controller1_pid_Product_1" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="79" type="task">  /* Product: '&lt;S1&gt;/Product' */
  pid_controller1_pid_Product_1 = pid_controller1_pid_Gain1_1 /
    pid_controller1_pid_Constant_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="135" type="init">  pid_controller1_pid_Product_1 = 0.0F;
</code>
        <forward block="pid_controller1_pid_Sum2" type="data">
          <var line="pid_controller1_pid_Product_1" mode="input" name="pid_controller1_pid_Product_1" port="pid_controller1_pid_Sum2_2" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_pid_Constant" type="data">
          <var line="pid_controller1_pid_Constant_1" mode="output" name="pid_controller1_pid_Constant_1" port="pid_controller1_pid_Constant_1" type="real32_T"/>
        </backward>
        <backward block="pid_controller1_pid_Gain1" type="data">
          <var line="pid_controller1_pid_Gain1_1" mode="output" name="pid_controller1_pid_Gain1_1" port="pid_controller1_pid_Gain1_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Saturate" id="10" name="pid_controller1_pid_Saturation">
        <input line="pid_controller1_pid_Sum2_1" port="pid_controller1_pid_Saturation_1">
          <connect block="pid_controller1_pid_Sum2" port="pid_controller1_pid_Sum2_1"/>
        </input>
        <output line="pid_controller1_pid_Saturation_1" port="pid_controller1_pid_Saturation_1">
          <connect block="pid_controller1_pid_voltage" port="pid_controller1_pid_voltage_1"/>
        </output>
        <var line="pid_controller1_pid_Sum2_1" mode="input" name="pid_controller1_pid_Sum2_1" port="pid_controller1_pid_Saturation_1" type="real32_T"/>
        <var line="pid_controller1_pid_Saturation_1" mode="extout" name="pid_controller1_pid_Saturation_1" port="pid_controller1_pid_Saturation_1" type="real32_T"/>
        <param name="Saturation_UpperSat" storage="pid_controller1_P" type="real32_T"/>
        <param name="Saturation_LowerSat" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="87" type="task">  /* Saturate: '&lt;S1&gt;/Saturation' */
  if (pid_controller1_pid_Sum2_1 &gt;= pid_controller1_P.Saturation_UpperSat) {
    pid_controller1_pid_Saturation_1 = pid_controller1_P.Saturation_UpperSat;
  } else if (pid_controller1_pid_Sum2_1 &lt;= pid_controller1_P.Saturation_LowerSat)
  {
    pid_controller1_pid_Saturation_1 = pid_controller1_P.Saturation_LowerSat;
  } else {
    pid_controller1_pid_Saturation_1 = pid_controller1_pid_Sum2_1;
  }

  /* End of Saturate: '&lt;S1&gt;/Saturation' */
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="137" type="init">  pid_controller1_pid_Saturation_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="43" type="param">  5.0F,                                /* Computed Parameter: Saturation_UpperSat
                                        * Referenced by: '&lt;S1&gt;/Saturation'
                                        */
  -5.0F                                /* Computed Parameter: Saturation_LowerSat
                                        * Referenced by: '&lt;S1&gt;/Saturation'
                                        */
,</code>
        <forward block="pid_controller1_voltage" type="port">
          <var line="pid_controller1_pid_1" mode="input" name="pid_controller1_pid_Saturation_1" port="pid_controller1_voltage_1" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_pid_Sum2" type="data">
          <var line="pid_controller1_pid_Sum2_1" mode="output" name="pid_controller1_pid_Sum2_1" port="pid_controller1_pid_Sum2_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Sum" id="11" name="pid_controller1_pid_Sum">
        <input line="pid_controller1_pid_error_1" port="pid_controller1_pid_Sum_1">
          <connect block="pid_controller1_pid_error" port="pid_controller1_pid_error_1"/>
        </input>
        <input line="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_Sum_2">
          <connect block="pid_controller1_pid_UnitDelay" port="pid_controller1_pid_UnitDelay_1"/>
        </input>
        <output line="pid_controller1_pid_Sum_1" port="pid_controller1_pid_Sum_1">
          <connect block="pid_controller1_pid_UnitDelay" port="pid_controller1_pid_UnitDelay_1"/>
        </output>
        <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_Sum_1" type="real32_T"/>
        <var line="pid_controller1_pid_UnitDelay_1" mode="input" name="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_Sum_2" type="real32_T"/>
        <var line="pid_controller1_pid_Sum_1" mode="output" name="pid_controller1_pid_Sum_1" port="pid_controller1_pid_Sum_1" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="99" type="task">  /* Sum: '&lt;S1&gt;/Sum' incorporates:
   *  Inport: '&lt;Root&gt;/error'
   */
  pid_controller1_pid_Sum_1 = pid_controller1_error_1 +
    pid_controller1_pid_UnitDelay_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="138" type="init">  pid_controller1_pid_Sum_1 = 0.0F;

</code>
        <forward block="pid_controller1_pid_UnitDelay" type="data">
          <var line="pid_controller1_pid_Sum_1" mode="input" name="pid_controller1_pid_Sum_1" port="pid_controller1_pid_UnitDelay_1" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_error" type="data">
          <var line="pid_controller1_error_1" mode="extin" name="pid_controller1_error_1" port="pid_controller1_error_1" type="real32_T"/>
        </backward>
        <backward block="pid_controller1_pid_UnitDelay" type="data">
          <var line="pid_controller1_pid_UnitDelay_1" mode="output" name="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_UnitDelay_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Sum" id="12" name="pid_controller1_pid_Sum1">
        <input line="pid_controller1_pid_error_1" port="pid_controller1_pid_Sum1_1">
          <connect block="pid_controller1_pid_error" port="pid_controller1_pid_error_1"/>
        </input>
        <input line="pid_controller1_pid_UnitDelay1_1" port="pid_controller1_pid_Sum1_2">
          <connect block="pid_controller1_pid_UnitDelay1" port="pid_controller1_pid_UnitDelay1_1"/>
        </input>
        <output line="pid_controller1_pid_Sum1_1" port="pid_controller1_pid_Sum1_1">
          <connect block="pid_controller1_pid_Gain2" port="pid_controller1_pid_Gain2_1"/>
        </output>
        <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_Sum1_1" type="real32_T"/>
        <var line="pid_controller1_pid_UnitDelay1_1" mode="input" name="pid_controller1_pid_UnitDelay1_1" port="pid_controller1_pid_Sum1_2" type="real32_T"/>
        <var line="pid_controller1_pid_Sum1_1" mode="output" name="pid_controller1_pid_Sum1_1" port="pid_controller1_pid_Sum1_1" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="65" type="task">  /* Sum: '&lt;S1&gt;/Sum1' incorporates:
   *  Inport: '&lt;Root&gt;/error'
   */
  pid_controller1_pid_Sum1_1 = pid_controller1_error_1 -
    pid_controller1_pid_UnitDelay1_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="132" type="init">  pid_controller1_pid_Sum1_1 = 0.0F;
</code>
        <forward block="pid_controller1_pid_Gain2" type="data">
          <var line="pid_controller1_pid_Sum1_1" mode="input" name="pid_controller1_pid_Sum1_1" port="pid_controller1_pid_Gain2_1" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_error" type="data">
          <var line="pid_controller1_error_1" mode="extin" name="pid_controller1_error_1" port="pid_controller1_error_1" type="real32_T"/>
        </backward>
        <backward block="pid_controller1_pid_UnitDelay1" type="data">
          <var line="pid_controller1_pid_UnitDelay1_1" mode="output" name="pid_controller1_pid_UnitDelay1_1" port="pid_controller1_pid_UnitDelay1_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Sum" id="13" name="pid_controller1_pid_Sum2">
        <input line="pid_controller1_pid_Gain_1" port="pid_controller1_pid_Sum2_1">
          <connect block="pid_controller1_pid_Gain" port="pid_controller1_pid_Gain_1"/>
        </input>
        <input line="pid_controller1_pid_Product_1" port="pid_controller1_pid_Sum2_2">
          <connect block="pid_controller1_pid_Product" port="pid_controller1_pid_Product_1"/>
        </input>
        <input line="pid_controller1_pid_Gain3_1" port="pid_controller1_pid_Sum2_3">
          <connect block="pid_controller1_pid_Gain3" port="pid_controller1_pid_Gain3_1"/>
        </input>
        <output line="pid_controller1_pid_Sum2_1" port="pid_controller1_pid_Sum2_1">
          <connect block="pid_controller1_pid_Saturation" port="pid_controller1_pid_Saturation_1"/>
        </output>
        <var line="pid_controller1_pid_Gain_1" mode="input" name="pid_controller1_pid_Gain_1" port="pid_controller1_pid_Sum2_1" type="real32_T"/>
        <var line="pid_controller1_pid_Product_1" mode="input" name="pid_controller1_pid_Product_1" port="pid_controller1_pid_Sum2_2" type="real32_T"/>
        <var line="pid_controller1_pid_Gain3_1" mode="input" name="pid_controller1_pid_Gain3_1" port="pid_controller1_pid_Sum2_3" type="real32_T"/>
        <var line="pid_controller1_pid_Sum2_1" mode="output" name="pid_controller1_pid_Sum2_1" port="pid_controller1_pid_Sum2_1" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="83" type="task">  /* Sum: '&lt;S1&gt;/Sum2' */
  pid_controller1_pid_Sum2_1 = (pid_controller1_pid_Gain_1 +
    pid_controller1_pid_Product_1) + pid_controller1_pid_Gain3_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="136" type="init">  pid_controller1_pid_Sum2_1 = 0.0F;
</code>
        <forward block="pid_controller1_pid_Saturation" type="data">
          <var line="pid_controller1_pid_Sum2_1" mode="input" name="pid_controller1_pid_Sum2_1" port="pid_controller1_pid_Saturation_1" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_pid_Gain" type="data">
          <var line="pid_controller1_pid_Gain_1" mode="output" name="pid_controller1_pid_Gain_1" port="pid_controller1_pid_Gain_1" type="real32_T"/>
        </backward>
        <backward block="pid_controller1_pid_Gain3" type="data">
          <var line="pid_controller1_pid_Gain3_1" mode="output" name="pid_controller1_pid_Gain3_1" port="pid_controller1_pid_Gain3_1" type="real32_T"/>
        </backward>
        <backward block="pid_controller1_pid_Product" type="data">
          <var line="pid_controller1_pid_Product_1" mode="output" name="pid_controller1_pid_Product_1" port="pid_controller1_pid_Product_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="UnitDelay" id="14" name="pid_controller1_pid_UnitDelay">
        <input line="pid_controller1_pid_Sum_1" port="pid_controller1_pid_UnitDelay_1">
          <connect block="pid_controller1_pid_Sum" port="pid_controller1_pid_Sum_1"/>
        </input>
        <output line="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_UnitDelay_1">
          <connect block="pid_controller1_pid_Gain1" port="pid_controller1_pid_Gain1_1"/>
          <connect block="pid_controller1_pid_Sum" port="pid_controller1_pid_Sum_2"/>
        </output>
        <var line="pid_controller1_pid_Sum_1" mode="input" name="pid_controller1_pid_Sum_1" port="pid_controller1_pid_UnitDelay_1" type="real32_T"/>
        <var line="pid_controller1_pid_UnitDelay_1" mode="output" name="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_UnitDelay_1" type="real32_T"/>
        <state name="UnitDelay_DSTATE" storage="pid_controller1_DWork" type="real32_T"/>
        <param name="UnitDelay_X0" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="55" type="task">  /* UnitDelay: '&lt;S1&gt;/Unit Delay' */
  pid_controller1_pid_UnitDelay_1 = pid_controller1_DWork.UnitDelay_DSTATE;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="105" type="update">  /* Update for UnitDelay: '&lt;S1&gt;/Unit Delay' */
  pid_controller1_DWork.UnitDelay_DSTATE = pid_controller1_pid_Sum_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="129" type="init">  pid_controller1_pid_UnitDelay_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="141" type="state">  pid_controller1_DWork.UnitDelay_DSTATE = 0.0F;
  /* InitializeConditions for UnitDelay: '&lt;S1&gt;/Unit Delay' */
  pid_controller1_DWork.UnitDelay_DSTATE = pid_controller1_P.UnitDelay_X0;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="28" type="param">  0.0F,                                /* Computed Parameter: UnitDelay_X0
                                        * Referenced by: '&lt;S1&gt;/Unit Delay'
                                        */
</code>
        <forward block="pid_controller1_pid_Gain1" type="data">
          <var line="pid_controller1_pid_UnitDelay_1" mode="input" name="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_Gain1_1" type="real32_T"/>
        </forward>
        <forward block="pid_controller1_pid_Sum" type="data">
          <var line="pid_controller1_pid_UnitDelay_1" mode="input" name="pid_controller1_pid_UnitDelay_1" port="pid_controller1_pid_Sum_2" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_pid_Sum" type="data">
          <var line="pid_controller1_pid_Sum_1" mode="output" name="pid_controller1_pid_Sum_1" port="pid_controller1_pid_Sum_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="UnitDelay" id="15" name="pid_controller1_pid_UnitDelay1">
        <input line="pid_controller1_pid_error_1" port="pid_controller1_pid_UnitDelay1_1">
          <connect block="pid_controller1_pid_error" port="pid_controller1_pid_error_1"/>
        </input>
        <output line="pid_controller1_pid_UnitDelay1_1" port="pid_controller1_pid_UnitDelay1_1">
          <connect block="pid_controller1_pid_Sum1" port="pid_controller1_pid_Sum1_2"/>
        </output>
        <var line="pid_controller1_pid_error_1" mode="input" name="pid_controller1_error_1" port="pid_controller1_pid_UnitDelay1_1" type="real32_T"/>
        <var line="pid_controller1_pid_UnitDelay1_1" mode="output" name="pid_controller1_pid_UnitDelay1_1" port="pid_controller1_pid_UnitDelay1_1" type="real32_T"/>
        <state name="UnitDelay1_DSTATE" storage="pid_controller1_DWork" type="real32_T"/>
        <param name="UnitDelay1_X0" storage="pid_controller1_P" type="real32_T"/>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="62" type="task">  /* UnitDelay: '&lt;S1&gt;/Unit Delay1' */
  pid_controller1_pid_UnitDelay1_1 = pid_controller1_DWork.UnitDelay1_DSTATE;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="108" type="update">  /* Update for UnitDelay: '&lt;S1&gt;/Unit Delay1' incorporates:
   *  Inport: '&lt;Root&gt;/error'
   */
  pid_controller1_DWork.UnitDelay1_DSTATE = pid_controller1_error_1;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="131" type="init">  pid_controller1_pid_UnitDelay1_1 = 0.0F;
</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="142" type="state">  pid_controller1_DWork.UnitDelay1_DSTATE = 0.0F;

  /* InitializeConditions for UnitDelay: '&lt;S1&gt;/Unit Delay1' */
  pid_controller1_DWork.UnitDelay1_DSTATE = pid_controller1_P.UnitDelay1_X0;

</code>
        <code file="models/pid/pid_controller1_ert_rtw/pid_controller1_data.c" line="34" type="param">  0.0F,                                /* Computed Parameter: UnitDelay1_X0
                                        * Referenced by: '&lt;S1&gt;/Unit Delay1'
                                        */
</code>
        <forward block="pid_controller1_pid_Sum1" type="data">
          <var line="pid_controller1_pid_UnitDelay1_1" mode="input" name="pid_controller1_pid_UnitDelay1_1" port="pid_controller1_pid_Sum1_2" type="real32_T"/>
        </forward>
        <backward block="pid_controller1_error" type="data">
          <var line="pid_controller1_error_1" mode="extin" name="pid_controller1_error_1" port="pid_controller1_error_1" type="real32_T"/>
        </backward>
      </block>
      <block blocktype="Outport" id="16" name="pid_controller1_pid_voltage">
        <input line="pid_controller1_pid_Saturation_1" port="pid_controller1_pid_voltage_1">
          <connect block="pid_controller1_pid_Saturation" port="pid_controller1_pid_Saturation_1"/>
        </input>
      </block>
    </sm:blocks>
    <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="45" type="task">  /* Outputs for Atomic SubSystem: '&lt;Root&gt;/pid' */
  /* End of Outputs for SubSystem: '&lt;Root&gt;/pid' */
</code>
    <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="147" type="init">  /* InitializeConditions for Atomic SubSystem: '&lt;Root&gt;/pid' */
</code>
    <code file="models/pid/pid_controller1_ert_rtw/pid_controller1.c" line="154" type="state">  /* End of InitializeConditions for SubSystem: '&lt;Root&gt;/pid' */
</code>
  </block>
  <block blocktype="Outport" id="17" name="pid_controller1_voltage">
    <input line="pid_controller1_pid_1" port="pid_controller1_voltage_1">
      <connect block="pid_controller1_pid" port="pid_controller1_pid_voltage"/>
    </input>
    <var line="pid_controller1_pid_1" mode="input" name="pid_controller1_pid_Saturation_1" port="pid_controller1_voltage_1" type="real32_T"/>
    <backward block="pid_controller1_pid_Saturation" type="port">
      <var line="pid_controller1_pid_Saturation_1" mode="extout" name="pid_controller1_pid_Saturation_1" port="pid_controller1_pid_Saturation_1" type="real32_T"/>
    </backward>
  </block>
  <code type="rt-macro">/* Macros for accessing real-time model data structure */
#ifndef rtmGetErrorStatus
# define rtmGetErrorStatus(rtm)        ((rtm)-&gt;errorStatus)
#endif

#ifndef rtmSetErrorStatus
# define rtmSetErrorStatus(rtm, val)   ((rtm)-&gt;errorStatus = (val))
#endif

</code>
  <code type="rt-type">/* Real-time Model Data Structure */
struct RT_MODEL_pid_controller1 {
  const char_T * volatile errorStatus;
};
</code>
  <object kind="rtm-extern" name="pid_controller1_M" type="extern struct RT_MODEL_pid_controller1 * const"/>
  <object kind="rtm-object" name="pid_controller1_M_" type="RT_MODEL_pid_controller1"/>
  <object kind="rtm-pointer" name="pid_controller1_M" type="RT_MODEL_pid_controller1 * const" value="&amp;pid_controller1_M_"/>
  <includes file="&lt;stddef.h>" from="models/pid/pid_controller1_ert_rtw/pid_controller1.h" index="0"/>
  <includes file="&quot;rtwtypes.h&quot;" from="models/pid/pid_controller1_ert_rtw/pid_controller1.h" index="1"/>
  <includes file="&quot;pid_controller1_types.h&quot;" from="models/pid/pid_controller1_ert_rtw/pid_controller1.h" index="2"/>
  <includes file="&quot;pid_controller1_private.h&quot;" from="models/pid/pid_controller1_ert_rtw/pid_controller1.c" index="3"/>
</sm:blocks>
